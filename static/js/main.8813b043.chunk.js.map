{"version":3,"sources":["App.js","index.js"],"names":["App","handleAddChange","e","setState","prevState","props","task","text","target","value","id","state","isEditing","console","log","handleEditChange","thisTask","theIndex","tasks","findIndex","tasksTask","changedTask","newTasksArray2","handleDelete","newTasksArray","filter","item","handleEdit","onSubmitTask","preventDefault","concat","uniqid","onSubmitEdit","this","onSubmit","htmlFor","onChange","type","map","EditTemplate","handleOnSubmitEdit","ViewTemplate","editHandler","deleteHandler","Component","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8813b043.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport uniqid from 'uniqid';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      task: {\n        text: '',\n        id: uniqid(),\n        isEditing: false,\n      },\n      tasks: [],\n    };\n  }\n\n  handleAddChange = (e) => {\n    this.setState(\n      (prevState, props) => ({\n        task: {\n          text: e.target.value,\n          id: this.state.task.id,\n          isEditing: false,\n        },\n      }),\n      () => {\n        console.log('asdf');\n        console.log('asdf');\n      }\n    );\n  };\n\n  handleEditChange = (e, thisTask) => {\n    //find the correct task first!\n    let theIndex = this.state.tasks.findIndex(\n      (tasksTask) => tasksTask === thisTask\n    );\n\n    let changedTask = thisTask;\n    changedTask.text = e.target.value;\n\n    let newTasksArray2 = this.state.tasks;\n    newTasksArray2[theIndex] = changedTask;\n\n    this.setState({ tasks: newTasksArray2 }, () => {\n      console.log('lol', this.state.tasks);\n    });\n  };\n\n  handleDelete = (e, thisTask) => {\n    //create a new array to pass to state without that one\n    let newTasksArray = this.state.tasks.filter(\n      (item) => item.id !== thisTask.id\n    );\n    this.setState((prevState) => ({\n      tasks: newTasksArray,\n    }));\n    console.log(this.state);\n  };\n\n  // Click on Edit button\n  handleEdit = (e, thisTask) => {\n    //which index? -matches task\n    let theIndex = this.state.tasks.findIndex(\n      (tasksTask) => tasksTask === thisTask\n    );\n\n    let changedTask = thisTask;\n    changedTask.isEditing = true;\n\n    let newTasksArray2 = this.state.tasks;\n    newTasksArray2[theIndex].isEditing = true;\n\n    this.setState((prevState) => ({\n      tasks: newTasksArray2,\n    }));\n  };\n\n  onSubmitTask = (e) => {\n    e.preventDefault();\n\n    this.setState((prevState) => ({\n      tasks: this.state.tasks.concat(this.state.task),\n      task: {\n        text: '',\n        id: uniqid(),\n        isEditing: false,\n      },\n    }));\n  };\n\n  //change this task's isEditing to be false now, since we're done editing\n  onSubmitEdit = (e, thisTask) => {\n    e.preventDefault();\n\n    console.log('onsubmitedit');\n    let theIndex = this.state.tasks.findIndex(\n      (tasksTask) => tasksTask === thisTask\n    );\n\n    let newTasksArray2 = this.state.tasks;\n    newTasksArray2[theIndex].isEditing = false;\n\n    this.setState({\n      tasks: newTasksArray2,\n    });\n  };\n\n  render() {\n    const { task, tasks } = this.state;\n\n    return (\n      <div>\n        <form onSubmit={this.onSubmitTask}>\n          <label htmlFor=\"taskInput\">Enter task</label>\n          <input\n            onChange={this.handleAddChange}\n            value={task.text}\n            type=\"text\"\n            id=\"taskInput\"\n          />\n          <button type=\"submit\">Add Task</button>\n        </form>\n\n        <ul>\n          {tasks.map((task) => (\n            <li key={task.id}>\n              {task.isEditing ? (\n                <EditTemplate\n                  task={task}\n                  handleEditChange={(e) => this.handleEditChange(e, task)}\n                  handleOnSubmitEdit={(e) => this.onSubmitEdit(e, task)}\n                />\n              ) : (\n                <ViewTemplate\n                  task={task}\n                  editHandler={(e) => this.handleEdit(e, task)}\n                  deleteHandler={(e) => this.handleDelete(e, task)}\n                />\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nfunction ViewTemplate({ task, editHandler, deleteHandler }) {\n  return (\n    <div>\n      {task.text} <button onClick={(e) => editHandler(e, task)}>edit</button>\n      <button id={task.id} onClick={(e) => deleteHandler(e, task)}>\n        Delete\n      </button>\n    </div>\n  );\n}\n\nfunction EditTemplate({ task, handleEditChange, handleOnSubmitEdit }) {\n  return (\n    <div>\n      <form onSubmit={(e) => handleOnSubmitEdit(e, task)}>\n        {/* <label htmlFor=\"taskEditInput\">Enter task</label> */}\n        <input\n          onChange={(e) => handleEditChange(e, task)}\n          value={task.text}\n          type=\"text\"\n          id=\"taskEditInput\"\n        />\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}